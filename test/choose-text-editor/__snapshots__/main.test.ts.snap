// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`--showStatus prints a table of status codes and names 1`] = `
"
 code | name
------|----------------------
    0 | Success
    1 | UnexpectedException
    2 | IndeterminableTTY
    3 | NotFound
    4 | InvalidEditorSet
    5 | ConfigLoadingFailure
    6 | EmptyConfig
    7 | ConfigNotFound
    8 | ExecutionFailure
    9 | UnsatisfiedChooser
   10 | InvalidPrefix
   11 | EmptyEditorSet
"
`;

exports[`consider exiting early when FORCE_EDITOR environment variable is not set calls choose 1`] = `
Array [
  Array [
    Object {
      "editorSet": Object {
        "chooser": "@khai96x/choose-text-editor@^3.2.1",
        "terminal": Array [
          Object {
            "program": "vim",
          },
        ],
      },
      "env": Object {
        "ISINTTY": "false",
      },
      "which": [MockFunction] {
        "calls": Array [
          Array [
            "vim",
            Object {
              "all": false,
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": Promise {},
          },
        ],
      },
    },
  ],
]
`;

exports[`consider exiting early when FORCE_EDITOR environment variable is not set calls cosmiconfig 1`] = `
Array [
  Array [
    "@khai96x/choose-text-editor",
    Object {
      "cache": true,
      "packageProp": "choose-text-editor",
      "searchPlaces": Array [
        "choose-text-editor",
        "choose-text-editor.json",
        "choose-text-editor.yaml",
        "choose-text-editor.config.js",
        "choose-text-editor.js",
      ],
      "stopDir": undefined,
    },
  ],
]
`;

exports[`consider exiting early when FORCE_EDITOR environment variable is not set prints command of found editor 1`] = `
"
/usr/bin/vim 'args from cli command'
"
`;

exports[`consider exiting early when FORCE_EDITOR environment variable is set calls choose 1`] = `
Array [
  Array [
    Object {
      "editorSet": undefined,
      "env": Object {
        "FORCE_EDITOR": "FORCE_EDITOR",
      },
      "which": [MockFunction],
    },
  ],
]
`;

exports[`consider exiting early when FORCE_EDITOR environment variable is set prints command of FORCE_EDITOR 1`] = `
"
FORCE_EDITOR 'args from cli command'
"
`;

exports[`fail to choose prints error messages 1`] = `
"
[ERROR] No editor detected
help: Check if (at least one of) your editors are installed
help: Check if there is any typo in your config
"
`;

exports[`handle chosen command default --onChosen prints chosen command 1`] = `
"
/usr/bin/code --wait 'args from cli command'
"
`;

exports[`load configuration file when configuration file is empty prints error messages 1`] = `
"
[ERROR] Config is empty
* config file: '/path/to/config'
* config: undefined
"
`;

exports[`load configuration file when it fails to load configuration file prints error messages 1`] = `
"
[ERROR] Fail to load configuration file
* message: 'Error: Failed to load configuration file'
"
`;

exports[`load configuration file when no configuration file found prints error messages 1`] = `
"
[ERROR] No config file found
* search places: [
  'choose-text-editor',
  'choose-text-editor.json',
  'choose-text-editor.yaml',
  'choose-text-editor.config.js',
  'choose-text-editor.js'
]
"
`;

exports[`validate loaded configuration invalid chooser prints error messages 1`] = `
"
[ERROR] Invalid chooser
* config file: '/path/to/config'
* config package: 'not-valid-chooser'
* used package: '@khai96x/choose-text-editor'
"
`;

exports[`validate loaded configuration invalid editor set prints error messages 1`] = `
"
[ERROR] Config does not satisfy schema
* config file: '/path/to/config'
* stack:
    0: instance.chooser is not of a type(s) string
    1: instance.graphical[0].program is not of a type(s) string
    
"
`;
